version: "3.8"
services:
  nginx:
    image: nginx
    volumes:
      - ./:/app
      - ./docker/images/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    working_dir: /app
    ports:
      - "${NGINX_PORT}:80"
    networks:
      - app

  php:
    build:
      context: docker/images/php
    volumes:
      - ./:/app
    working_dir: /app
    networks:
      - app
    environment:
      PHP_IDE_CONFIG: "serverName=localhost"

  postgres:
    image: postgres:14.1
    volumes:
      - ./docker/.data/postgresql:/var/lib/postgresql/data
      - ./docker/images/postgresql/base.conf:/usr/share/postgresql/postgresql.conf
    networks:
      - app
    ports:
      - "${DC_POSTGRES_PORT}:5432"
    command: [
      "postgres",
      "-c", "config_file=/usr/share/postgresql/postgresql.conf",
    ]
    environment:
      POSTGRES_USER: ${POSTGRESQL_DB_USER}
      POSTGRES_PASSWORD: ${POSTGRESQL_DB_PASSWORD}
      POSTGRES_DB: ${POSTGRESQL_DB_NAME}

  mysql:
    build:
      context: docker/images/mysql
    volumes:
      - ./docker/.data/mysql:/var/lib/mysql
      - ./docker/images/mysql/conf.d/base.cnf:/etc/mysql/conf.d/base.cnf
    networks:
      - app
    ports:
      - "${DC_MYSQL_PORT}:3306"
    environment:
      MYSQL_USER: ${MYSQL_DB_USER}
      MYSQL_PASSWORD: ${MYSQL_DB_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DB_NAME}
      MYSQL_ROOT_PASSWORD: ${MYSQL_DB_PASSWORD}

  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    networks:
      - app
networks:
  app:
