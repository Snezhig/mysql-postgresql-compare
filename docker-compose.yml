version: "3.8"
services:
  php:
    build:
      context: docker/images/php
    volumes:
      - ./:/app
    working_dir: /app
    networks:
      - app
    environment:
      PHP_IDE_CONFIG: "serverName=localhost"

  postgres:
    image: postgres:14.1
    volumes:
      - ./docker/.data/postgresql:/var/lib/postgresql/data
    networks:
      - app
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}

  mysql:
    image: mysql:8.0
    volumes:
      - ./docker/.data/mysql:/var/lib/mysql
    networks:
      - app
    environment:
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}

  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    networks:
      - app

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-13}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ChangeMe}
      POSTGRES_USER: ${POSTGRES_USER:-symfony}
    volumes:
      - db-data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###
networks:
  app:
volumes:
###> doctrine/doctrine-bundle ###
  db-data:
###< doctrine/doctrine-bundle ###
